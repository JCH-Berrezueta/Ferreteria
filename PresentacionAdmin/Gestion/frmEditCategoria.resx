<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1
        MAAA6mAAADqYAAAXcJy6UTwAAAAHdElNRQfpAgkDERXGFYWiAAAEUklEQVRYR+2Y6yttXRTGz/9BUjju
        HLnzjSK3XDr5gBOf3EsJJYQPRCjFH+K7c3BCSj65HPcUuSX33C/j7Tdqab97r73t/e6l11vvrKe19tpj
        PuNZY4455pzry9XVlXxmfLF/8Nnw3xZ4eXkp5+fnerUKBp+9L2dwKhCSu7s7eX19ldvbW7038PDwII+P
        jx6DfvDBcXFx4eDTDKYC6Xx/fy9bW1vS3NwsJSUlUlZWpvjx44cUFRVJbm6u5OXlvYucnJw35OfnS1NT
        k2xsbKhgomnv2x4OAonc9fW1nJ2dSWFhofj7+0tERISEhYVJeHi4BAQESEVFhQwODkpfX5/09/c7Bf8P
        Dw/L6OiojIyMSFVVlfj5+Ul6errs7Oy4JdJBINF7fn6WmZkZFZWUlCTx8fF65Xd7e7t40k5OTmRpaUlO
        T0/199DQkIosKCiQ4+Pjd4fbqcDJyUmNGOJiY2MlISFBvn79KhMTE+qIFMDODESGtry8rNEPCgpSrt3d
        XVlZWdH70NBQKS0tVX83NzdOJ45TgVNTUw4Cg4ODZXx8XJ1j46wZ//3+/VtCQkIkNTVVAgMDZXZ2VlZX
        V/VZcnKyPmtoaNCX/VcEIoi0SExM1OjPz8+/CYQX4GNhYUGjbjbUHgv8+fPn30SYNVuBDCX5yzCbCSQF
        SCf6WCLQ0wjCwXAiCoF//vxxiCCpYJnAX79+vYmg6JrBEDg9Pa0zNjo6Wnx8fGRubk7W1tY0qh8ikGEa
        GxtT5wh5rzE7GxsbtaTU19frM8oX+QifpQLj4uIkKipKV4fNzU1Navsl0B5PT08qCjvawcGBFBcXa95Z
        HkEEMhu/ffumb89SZ7uMOUN2dvbbPZOF4TY4LRGIMBATE6NDTB5yZQn0FNQ9JghcBq/XAokWQ0uxbW1t
        le7ubuns7JSuri6PQV844IITbq8FGkPLempVW1xcVE64ycd/LDAyMlJXAnYhNCYG/3FlefIEtn1plZWV
        yo0PrwRSs+rq6pSU57SOjg7JysqS79+/697QFbDBlj62HLW1tSqQofZKICSQ0V5eXvRKuWDTyYaWkuMK
        2Kyvr2sfW46amhprBBJBW4HuFGhnjb4fLpDGCsGOG1t2xK6ADbb0seX4EIFG/rS1tUlGRoYeCThnuAI2
        2NLHluNDBBpvT2QODw/l6OjILWBLnw+P4KfMQbNZzAFob29P9vf33QK2xqHJcoFmdZB8yszM1DrHVsoV
        sMHWOA0aHJbWwerqaiU1VgPjFOYJ6ENfYyVhdfJKIOcE1km2RSkpKVqYrWpwwQk3PgiGxwKNgzvnCfZw
        aWlp0tvbqwfvgYEBBV8X3IFhT9+enh7lYl8JNz7w5bZAs08fDDX7QF9fX0sAF5xwk6OUIHyanY0dBALe
        xPh41NLSol8AysvL9ZuMFYALTri3t7fVl1n0nAoEvI3x+c3+rGEVDG6zyL0r0BBp9QdMW7jzMdOlwM+A
        /wV6i78AoNeXpik/SigAAAAASUVORK5CYII=
</value>
  </data>
</root>